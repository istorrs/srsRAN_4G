name: C/C++ CI
on: push
jobs:
  x86_ubuntu_build:
    name: Build on x86
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04]
        compiler: [gcc, clang]
    steps:
    - uses: actions/checkout@v3
    - name: Build srsRAN on x86 ${{ matrix.os }}
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential \
          cmake \
          libfftw3-dev \
          libfftw3f-dev \
          libmbedtls-dev \
          libboost-program-options-dev \
          libconfig++-dev \
          libsctp-dev \
          libpcsclite-dev \
          libdw-dev \
          libzmq3-dev \
          libboost-system-dev \
          libboost-test-dev \
          libboost-thread-dev \
          qtbase5-dev \
          libqwt-qt5-dev \
          colordiff \
          ninja-build \
          valgrind
        mkdir build && cd build
        if [ "${{ matrix.os }}" = "ubuntu-24.04" ]; then
          cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_FLAGS="-Wno-maybe-uninitialized -Wno-stringop-overflow" \
            -DCMAKE_CXX_FLAGS="-Wno-maybe-uninitialized -Wno-stringop-overflow -Wno-deprecated-declarations" \
            -DENABLE_UHD=OFF \
            -DENABLE_BLADERF=OFF \
            -DENABLE_SOAPYSDR=OFF \
            -DENABLE_ZEROMQ=ON \
            -DENABLE_WERROR=OFF \
            -DENABLE_GUI=ON \
            -GNinja \
            ../
        else
          cmake \
            -DRF_FOUND=True \
            -DENABLE_GUI=ON \
            -GNinja \
            ..
        fi
        ninja && ctest

  aarch64_ubuntu_build:
    name: Build on aarch64
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        compiler: [gcc, clang]
        include:
          - os: ubuntu-22.04
            distro: ubuntu22.04
          - os: ubuntu-24.04
            distro: ubuntu24.04
    steps:
    - uses: actions/checkout@v3
    - name: Build srsRAN on aarch64 ${{ matrix.os }}
      uses: uraimo/run-on-arch-action@master
      with:
        arch: aarch64
        distro: ${{ matrix.distro }}
        run: |
          export CTEST_PARALLEL_LEVEL=$(nproc --all)
          apt update
          apt install -y \
            build-essential \
            cmake \
            libfftw3-dev \
            libfftw3f-dev \
            libmbedtls-dev \
            libboost-program-options-dev \
            libconfig++-dev \
            libsctp-dev \
            libpcsclite-dev \
            libdw-dev \
            libzmq3-dev \
            libboost-system-dev \
            libboost-test-dev \
            libboost-thread-dev \
            qtbase5-dev \
            libqwt-qt5-dev \
            colordiff \
            ninja-build \
            valgrind
          ls -l && pwd && mkdir build && cd build
          if [ "${{ matrix.os }}" = "ubuntu-24.04" ]; then
            cmake \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_C_FLAGS="-Wno-maybe-uninitialized -Wno-stringop-overflow" \
              -DCMAKE_CXX_FLAGS="-Wno-maybe-uninitialized -Wno-stringop-overflow -Wno-deprecated-declarations" \
              -DENABLE_UHD=OFF \
              -DENABLE_BLADERF=OFF \
              -DENABLE_SOAPYSDR=OFF \
              -DENABLE_ZEROMQ=ON \
              -DENABLE_WERROR=OFF \
              -DENABLE_GUI=ON \
              -GNinja \
              ..
          else
            cmake -DRF_FOUND=True -DENABLE_GUI=ON -GNinja ..
          fi
          ninja
